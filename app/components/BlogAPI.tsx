// Example API calls for creating rich blog posts

// 1. Create a rich blog post with custom sections
export async function createRichBlogPost() {
      const blogData = {
            title: "H∆∞·ªõng d·∫´n t·ªëi ∆∞u h√≥a listing Airbnb cho nƒÉm 2024",
            excerpt: "Kh√°m ph√° c√°c chi·∫øn l∆∞·ª£c m·ªõi nh·∫•t ƒë·ªÉ tƒÉng t·ª∑ l·ªá ƒë·∫∑t ph√≤ng v√† doanh thu t·ª´ cƒÉn h·ªô Airbnb c·ªßa b·∫°n",
            category: "Marketing Strategy",
            tags: ["airbnb", "optimization", "marketing", "2024"],
            image: "/images/blog/airbnb-optimization.jpg",
            author: "60f0cf4b8c8a3c4b4c8f0d3f", // User ID
            featured: true,
            status: "published",
            seo: {
                  metaTitle: "T·ªëi ∆∞u h√≥a Airbnb 2024 - Chi·∫øn l∆∞·ª£c Marketing hi·ªáu qu·∫£",
                  metaDescription: "H·ªçc c√°ch t·ªëi ∆∞u h√≥a listing Airbnb v·ªõi c√°c chi·∫øn l∆∞·ª£c marketing m·ªõi nh·∫•t nƒÉm 2024. TƒÉng ƒë·∫∑t ph√≤ng v√† doanh thu hi·ªáu qu·∫£.",
                  socialImage: "/images/blog/airbnb-optimization-social.jpg"
            },
            sections: [
                  {
                        type: "header",
                        title: "Xu h∆∞·ªõng th·ªã tr∆∞·ªùng Airbnb 2024",
                        order: 1
                  },
                  {
                        type: "paragraph",
                        content: "Th·ªã tr∆∞·ªùng du l·ªãch 2024 ƒëang ch·ª©ng ki·∫øn nh·ªØng thay ƒë·ªïi l·ªõn trong h√†nh vi c·ªßa kh√°ch h√†ng. Vi·ªác hi·ªÉu r√µ xu h∆∞·ªõng n√†y s·∫Ω gi√∫p b·∫°n ƒëi·ªÅu ch·ªânh chi·∫øn l∆∞·ª£c marketing ph√π h·ª£p.",
                        order: 2
                  },
                  {
                        type: "image",
                        title: "Th·ªëng k√™ th·ªã tr∆∞·ªùng du l·ªãch 2024",
                        data: {
                              url: "/images/blog/market-trends-2024.jpg",
                              alt: "Market trends for travel industry 2024",
                              caption: "S·ªë li·ªáu th·ªëng k√™ cho th·∫•y s·ª± ph·ª•c h·ªìi m·∫°nh m·∫Ω c·ªßa ng√†nh du l·ªãch"
                        },
                        order: 3
                  },
                  {
                        type: "quote",
                        content: "Th√†nh c√¥ng kh√¥ng ƒë·∫øn t·ª´ vi·ªác c√≥ nhi·ªÅu ph√≤ng, m√† t·ª´ vi·ªác t·ªëi ∆∞u h√≥a t·ª´ng chi ti·∫øt nh·ªè.",
                        order: 4
                  },
                  {
                        type: "header",
                        title: "Chi·∫øn l∆∞·ª£c t·ªëi ∆∞u h√≥a ti√™u ƒë·ªÅ",
                        order: 5
                  },
                  {
                        type: "list",
                        title: "Y·∫øu t·ªë quan tr·ªçng trong ti√™u ƒë·ªÅ",
                        data: {
                              items: [
                                    "S·ª≠ d·ª•ng t·ª´ kh√≥a ƒë·ªãa ƒëi·ªÉm c·ª• th·ªÉ",
                                    "Nh·∫•n m·∫°nh ƒëi·ªÉm ƒë·ªôc ƒë√°o c·ªßa cƒÉn h·ªô",
                                    "Bao g·ªìm th√¥ng tin v·ªÅ ti·ªán nghi n·ªïi b·∫≠t",
                                    "T·∫°o c·∫£m gi√°c c·∫•p thi·∫øt v√† h·∫•p d·∫´n",
                                    "T·ªëi ∆∞u ƒë·ªô d√†i ti√™u ƒë·ªÅ (50-60 k√Ω t·ª±)"
                              ]
                        },
                        order: 6
                  },
                  {
                        type: "header",
                        title: "H√¨nh ·∫£nh chuy√™n nghi·ªáp",
                        order: 7
                  },
                  {
                        type: "gallery",
                        title: "V√≠ d·ª• v·ªÅ b·ªô ·∫£nh chuy√™n nghi·ªáp",
                        data: {
                              images: [
                                    {
                                          url: "/images/blog/living-room-pro.jpg",
                                          alt: "Professional living room photography"
                                    },
                                    {
                                          url: "/images/blog/bedroom-pro.jpg",
                                          alt: "Professional bedroom photography"
                                    },
                                    {
                                          url: "/images/blog/kitchen-pro.jpg",
                                          alt: "Professional kitchen photography"
                                    }
                              ]
                        },
                        order: 8
                  },
                  {
                        type: "header",
                        title: "M√¥ t·∫£ chi ti·∫øt v√† h·∫•p d·∫´n",
                        order: 9
                  },
                  {
                        type: "paragraph",
                        content: "M√¥ t·∫£ listing c·ªßa b·∫°n ph·∫£i k·ªÉ m·ªôt c√¢u chuy·ªán. Thay v√¨ ch·ªâ li·ªát k√™ ti·ªán nghi, h√£y gi√∫p kh√°ch h√†ng h√¨nh dung ƒë∆∞·ª£c tr·∫£i nghi·ªám s·ªëng t·∫°i cƒÉn h·ªô c·ªßa b·∫°n.",
                        order: 10
                  },
                  {
                        type: "code",
                        title: "Template m√¥ t·∫£ hi·ªáu qu·∫£",
                        content: `üèôÔ∏è [T√™n cƒÉn h·ªô] - Tr·∫£i nghi·ªám [ƒë·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t]

‚ú® ƒêi·ªÉm n·ªïi b·∫≠t:
‚Ä¢ [Ti·ªán nghi 1] v·ªõi [m√¥ t·∫£ c·ª• th·ªÉ]
‚Ä¢ [Ti·ªán nghi 2] gi√∫p b·∫°n [l·ª£i √≠ch]
‚Ä¢ [V·ªã tr√≠] ch·ªâ c√°ch [ƒë·ªãa ƒëi·ªÉm n·ªïi ti·∫øng] [kho·∫£ng c√°ch]

üõèÔ∏è Kh√¥ng gian ngh·ªâ ng∆°i:
‚Ä¢ [Chi ti·∫øt ph√≤ng ng·ªß]
‚Ä¢ [Chi ti·∫øt ph√≤ng t·∫Øm]

üç≥ Khu v·ª±c sinh ho·∫°t:
‚Ä¢ [Chi ti·∫øt b·∫øp v√† ph√≤ng kh√°ch]

üìç V·ªã tr√≠ thu·∫≠n l·ª£i:
‚Ä¢ [C√°c ƒëi·ªÉm ƒë·∫øn g·∫ßn ƒë√≥]
‚Ä¢ [Ph∆∞∆°ng ti·ªán di chuy·ªÉn]`,
                        order: 11
                  },
                  {
                        type: "header",
                        title: "Qu·∫£n l√Ω ƒë√°nh gi√° v√† ph·∫£n h·ªìi",
                        order: 12
                  },
                  {
                        type: "paragraph",
                        content: "ƒê√°nh gi√° t√≠ch c·ª±c l√† y·∫øu t·ªë quy·∫øt ƒë·ªãnh trong thu·∫≠t to√°n x·∫øp h·∫°ng c·ªßa Airbnb. Vi·ªác duy tr√¨ rating cao v√† ph·∫£n h·ªìi nhanh ch√≥ng s·∫Ω gi√∫p listing c·ªßa b·∫°n xu·∫•t hi·ªán nhi·ªÅu h∆°n.",
                        order: 13
                  },
                  {
                        type: "divider",
                        order: 14
                  },
                  {
                        type: "header",
                        title: "K·∫øt lu·∫≠n",
                        order: 15
                  },
                  {
                        type: "paragraph",
                        content: "T·ªëi ∆∞u h√≥a listing Airbnb l√† m·ªôt qu√° tr√¨nh li√™n t·ª•c. B·∫±ng c√°ch √°p d·ª•ng c√°c chi·∫øn l∆∞·ª£c tr√™n v√† theo d√µi k·∫øt qu·∫£ th∆∞·ªùng xuy√™n, b·∫°n s·∫Ω th·∫•y s·ª± c·∫£i thi·ªán ƒë√°ng k·ªÉ trong t·ª∑ l·ªá ƒë·∫∑t ph√≤ng v√† doanh thu.",
                        order: 16
                  }
            ]
      };

      try {
            const response = await fetch('/api/blogs/rich', {
                  method: 'POST',
                  headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                  },
                  body: JSON.stringify(blogData)
            });

            const result = await response.json();
            console.log('Rich blog post created:', result);
            return result;
      } catch (error) {
            console.error('Error creating rich blog post:', error);
            throw error;
      }
}

// 2. Create blog from template
export async function createBlogFromTemplate() {
      const templateData = {
            templateType: "airbnb-guide",
            author: "60f0cf4b8c8a3c4b4c8f0d3f", // User ID
            data: {
                  title: "H∆∞·ªõng d·∫´n ƒë·∫ßu t∆∞ Airbnb t·∫°i Qu·∫≠n 1, TP.HCM",
                  location: "Qu·∫≠n 1, TP.HCM",
                  propertyType: "cƒÉn h·ªô studio",
                  tips: [
                        "Nghi√™n c·ª©u quy ƒë·ªãnh v·ªÅ kinh doanh l∆∞u tr√∫ ng·∫Øn h·∫°n",
                        "T√≠nh to√°n chi ph√≠ qu·∫£n l√Ω v√† v·∫≠n h√†nh h√†ng th√°ng",
                        "ƒê·∫ßu t∆∞ v√†o n·ªôi th·∫•t ch·∫•t l∆∞·ª£ng v√† hi·ªán ƒë·∫°i",
                        "X√¢y d·ª±ng m·∫°ng l∆∞·ªõi d·ªãch v·ª• h·ªó tr·ª£ ƒë√°ng tin c·∫≠y",
                        "T·ªëi ∆∞u h√≥a listing ƒë·ªÉ tƒÉng t·ª∑ l·ªá ƒë·∫∑t ph√≤ng"
                  ]
            }
      };

      try {
            const response = await fetch('/api/blogs/template', {
                  method: 'POST',
                  headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                  },
                  body: JSON.stringify(templateData)
            });

            const result = await response.json();
            console.log('Blog from template created:', result);
            return result;
      } catch (error) {
            console.error('Error creating blog from template:', error);
            throw error;
      }
}

// 3. Create photography tips blog
export async function createPhotographyBlog() {
      const templateData = {
            templateType: "photography-tips",
            author: "60f0cf4b8c8a3c4b4c8f0d3f",
            data: {
                  propertyType: "cƒÉn h·ªô duplex",
                  roomCount: "3",
                  specialFeatures: [
                        "Ban c√¥ng view th√†nh ph·ªë",
                        "B·∫øp m·ªü hi·ªán ƒë·∫°i",
                        "Ph√≤ng t·∫Øm k√≠nh c∆∞·ªùng l·ª±c",
                        "G√≥c l√†m vi·ªác ri√™ng bi·ªát"
                  ]
            }
      };

      try {
            const response = await fetch('/api/blogs/template', {
                  method: 'POST',
                  headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                  },
                  body: JSON.stringify(templateData)
            });

            const result = await response.json();
            console.log('Photography blog created:', result);
            return result;
      } catch (error) {
            console.error('Error creating photography blog:', error);
            throw error;
      }
}

// 4. Create property review blog
export async function createPropertyReview() {
      const templateData = {
            templateType: "property-review",
            author: "60f0cf4b8c8a3c4b4c8f0d3f",
            data: {
                  propertyName: "Saigon Sky Villa",
                  location: "Qu·∫≠n 7, TP.HCM",
                  rating: 4.5,
                  highlights: [
                        "V·ªã tr√≠ thu·∫≠n l·ª£i g·∫ßn Crescent Mall",
                        "View s√¥ng S√†i G√≤n tuy·ªát ƒë·∫πp",
                        "N·ªôi th·∫•t cao c·∫•p, thi·∫øt k·∫ø hi·ªán ƒë·∫°i",
                        "Host ph·∫£n h·ªìi nhanh v√† nhi·ªát t√¨nh",
                        "B·∫£o m·∫≠t t·ªët v·ªõi th·∫ª t·ª´ v√† camera"
                  ],
                  drawbacks: [
                        "Gi√° ƒë·ªó xe h∆°i cao",
                        "Wifi c√≥ l√∫c ch·∫≠m v√†o gi·ªù cao ƒëi·ªÉm",
                        "√Çm thanh t·ª´ ƒë∆∞·ªùng ph·ªë kh√° ·ªìn"
                  ]
            }
      };

      try {
            const response = await fetch('/api/blogs/template', {
                  method: 'POST',
                  headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                  },
                  body: JSON.stringify(templateData)
            });

            const result = await response.json();
            console.log('Property review created:', result);
            return result;
      } catch (error) {
            console.error('Error creating property review:', error);
            throw error;
      }
}

// 5. Create investment analysis blog
export async function createInvestmentAnalysis() {
      const templateData = {
            templateType: "investment-analysis",
            author: "60f0cf4b8c8a3c4b4c8f0d3f",
            data: {
                  location: "ƒê√† N·∫µng",
                  propertyPrice: "2.5 t·ª∑ VNƒê",
                  expectedROI: "12-15",
                  marketTrends: "tƒÉng tr∆∞·ªüng m·∫°nh nh·ªù du l·ªãch ph·ª•c h·ªìi"
            }
      };

      try {
            const response = await fetch('/api/blogs/template', {
                  method: 'POST',
                  headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                  },
                  body: JSON.stringify(templateData)
            });

            const result = await response.json();
            console.log('Investment analysis created:', result);
            return result;
      } catch (error) {
            console.error('Error creating investment analysis:', error);
            throw error;
      }
}

// Example usage in a React component
export function BlogCreationExample() {
      const handleCreateRichBlog = async () => {
            try {
                  await createRichBlogPost();
                  alert('Rich blog post created successfully!');
            } catch (error) {
                  alert('Error creating blog post');
            }
      };

      const handleCreateTemplate = async (templateType: string) => {
            try {
                  switch (templateType) {
                        case 'airbnb-guide':
                              await createBlogFromTemplate();
                              break;
                        case 'photography':
                              await createPhotographyBlog();
                              break;
                        case 'review':
                              await createPropertyReview();
                              break;
                        case 'investment':
                              await createInvestmentAnalysis();
                              break;
                  }
                  alert(`${templateType} blog created successfully!`);
            } catch (error) {
                  alert('Error creating blog from template');
            }
      };

      return (
            <div className="p-6 space-y-4">
                  <h2 className="text-2xl font-bold mb-4">Blog Creation Examples</h2>

                  <button
                        onClick={handleCreateRichBlog}
                        className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
                  >
                        Create Rich Blog Post
                  </button>

                  <div className="space-x-2">
                        <button
                              onClick={() => handleCreateTemplate('airbnb-guide')}
                              className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600"
                        >
                              Airbnb Guide Template
                        </button>

                        <button
                              onClick={() => handleCreateTemplate('photography')}
                              className="bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600"
                        >
                              Photography Tips Template
                        </button>

                        <button
                              onClick={() => handleCreateTemplate('review')}
                              className="bg-orange-500 text-white px-4 py-2 rounded hover:bg-orange-600"
                        >
                              Property Review Template
                        </button>

                        <button
                              onClick={() => handleCreateTemplate('investment')}
                              className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
                        >
                              Investment Analysis Template
                        </button>
                  </div>
            </div>
      );
}
